@using BloomPrototype.GameTypes.Plants
@using BloomPrototype.GameTypes.Soils;

<span class="@SoilCss">
	<span class="@ContentsCss"/>

	@if (PlayerLocation == Soil)
	{
		<span class="player"></span>
	}
</span>

@code {
	[Parameter]
	public Soil Soil { get; set; }

	[Parameter]
	public Soil PlayerLocation { get; set; }

	private string SoilCss = "";
	private string ContentsCss = "";

	protected async override Task OnParametersSetAsync()
	{
		SoilCss = "soil ";
		ContentsCss = "";

		SetSoilCharacteristicsCss();
		SetContentsCss();

		SoilCss = SoilCss.Trim();

		await base.OnParametersSetAsync();
	}

	private void SetSoilCharacteristicsCss()
	{
		SoilCss += $"{Soil.Fertility.ToString().ToLower()} ";
		SoilCss += $"{Soil.WaterLevel.ToString().ToLower()} ";
		SoilCss += $"{Soil.Retention.ToString().ToLower()} ";
	}

	private void SetContentsCss()
	{
		if (Soil.GrowingPlant != null)
		{
			ContentsCss += "plant ";
			ContentsCss += $"{Soil.GrowingPlant.GetType().Name.ToLower()}-";
			ContentsCss += $"{Soil.GrowingPlant.Maturity.ToString().ToLower()}-";
			ContentsCss += $"{Soil.GrowingPlant.Health.ToString().ToLower()} ";
		}

		//if (Soil.GrowingSeed != null)
		//	ContentsCss += $"{Soil.GrowingSeed.GetType().Name.ToLower()} ";
	}
}
